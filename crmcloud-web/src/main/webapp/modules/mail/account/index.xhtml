<?xml version='1.0' encoding='UTF-8' ?>
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:p="http://primefaces.org/ui"
                xmlns:f="http://xmlns.jcp.org/jsf/core"
                xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
                xmlns:h="http://xmlns.jcp.org/jsf/html"
                xmlns:c="http://xmlns.jcp.org/jsp/jstl/core"
                xmlns:crm="http://gnext.co.jp/facelets">
    <div id="pageTitle">#{mailBundle['label.mail.account.title']}  #{msg['symbol.paren.left']}#{mailBundle['label.mail.account.title.list']}#{msg['symbol.paren.right']}</div>
    <h:form id="fromMailAccountList">
        <p:confirmDialog message="#{mailBundle['label.mail.account.confirm.delete.message']}" header="#{msg['label.dialog.header']}"
                         widgetVar="confirmDeleteMailAccount" id="confirmDeleteMailAccount">  
            <p:commandButton value="#{msg['label.dialog.yes']}" onclick="PF('confirmDeleteMailAccount').hide();"
                             update="mainContent :growl" actionListener="#{mailAccountController.delete}" icon="ui-icon-check">
                <f:param name="accountId" value="#{mailAccountController.selectMailAccountId}"/>
                <f:param name="force" value="true"/>
            </p:commandButton>
            <p:commandButton value="#{msg['label.dialog.no']}" onclick="PF('confirmDeleteMailAccount').hide();" type="button" icon="ui-icon-close"/>   
        </p:confirmDialog>
        <h:panelGrid width="100%" styleClass="page-header">
            <f:facet name="header">
                <div class="row">
                    <div class="col-md-6">
                        <h1>
                            #{mailBundle['label.mail.account.title']} 
                            <small>#{mailBundle['label.mail.account.title.list']}</small>
                        </h1>
                    </div>
                    <div class="col-md-6 text-right">
                        <p:commandButton value="#{msg['label.create']}"
                                         icon="fa fa-plus-circle"
                                         title="#{msg['label.create']}"
                                         actionListener="#{mailAccountController.show}"
                                         update="mainContent"
                                         rendered="${sec.hasMethod('MailAccountController', 'create')}"
                                         onstart="start()" onsuccess="finish()">
                            <f:param name="showType" value="create"/>
                            <f:param name="force" value="true"/>
                        </p:commandButton>
                        <p:commandButton value="#{msg['label.download']}"
                                       title="#{msg['label.download']}"
                                       icon="fa fa-cloud-download"
                                       action="#{mailAccountController.download('tblMailAccounts',mailBundle['label.mail.account.download.file.name'])}"
                                       ajax="false"
                                       rendered="${sec.hasMethod('MailAccountController', 'download')}">
                        </p:commandButton>
                    </div>
                </div>
            </f:facet>
        </h:panelGrid>
        <p:outputPanel rendered="#{sec.hasMethod('MailAccountController','search')}">
            <div class="box box-solid box-search">
                <div class="box-header with-border" data-widget="collapse">
                    <h3 class="box-title">#{msg['label.search.title']}</h3>
                    #{msg['symbol.colon']}<code></code>
                    <div class="box-tools pull-right">
                        <button type="button" class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-plus"></i></button>
                    </div>
                </div>
                <div class="box-body">
                    <div id="search-filter"></div>
                </div>
                <div class="box-footer text-center">
                    <h:inputText value="#{mailAccountController.searchDataJson}"
                                 styleClass="searchDataJson" style="display: none"/>

                    <p:commandLink actionListener="#{mailAccountController.search}" 
                                   style="display:none" styleClass="search-action" 
                                   onstart="start()" onsuccess="finish()" 
                                   update="mainContent, :growl"
                                   />

                    <p:commandButton value="#{msg['label.search']}" type="button" icon="fa fa-search"
                                     styleClass="btn-search"></p:commandButton>
                </div>
            </div>
        </p:outputPanel>
        
        <c:set var="rowsPerPageTemplate" value="#{configController.getConfig('DATATABLE_ROW_PER_PAGE')}" scope="session" />
        <c:set var="rows" value="#{configController.getConfig('DATATABLE_DEFAULT_PER_PAGE')}" scope="session" />
        <p:dataTable id="tblMailAccounts" rowIndexVar="rowIndex"
                     var="model" value="#{mailAccountController.models}"
                     styleClass="crmcloud_datatable"
                     scrollable="true"
                     lazy="true" paginator="true" paginatorTemplate="#{layout.paginatorTemplate}" currentPageReportTemplate="#{layout.currentPageReportTemplate}"
                     rowsPerPageTemplate="#{rowsPerPageTemplate}" rows="#{rows}" pageLinks="5" rowHover="true" emptyMessage="#{msg['label.data.empty']}">
            <p:column styleClass="table-action status-column" exportable="false">
                <p:commandButton id="dynaButton" icon="fa fa-cog" styleClass="btn-option"/>
                <p:menu overlay="true" trigger="dynaButton" my="left top" at="left bottom">
                    <p:menuitem value="#{msg['label.detail']}" icon="fa fa-search"
                                actionListener="#{mailAccountController.show}"
                                update="mainContent" onstart="start()" onsuccess="finish()"
                                rendered="#{sec.hasMethod('MailAccountController', 'view')}">
                        <f:param name="rowNum" value="#{model.rowNum}"/>
                        <f:param name="showType" value="view"/>
                        <f:param name="accountId" value="#{model.mailAccount.accountId}"/>
                        <f:param name="force" value="true"/>
                    </p:menuitem>
                    <p:menuitem value="#{msg['label.edit']}" icon="fa fa-edit"
                                actionListener="#{mailAccountController.show}"
                                update="mainContent" onstart="start()" onsuccess="finish()"
                                rendered="${sec.hasMethod('MailAccountController', 'update')}">
                        <f:param name="showType" value="edit"/>
                        <f:param name="accountId" value="#{model.mailAccount.accountId}"/>
                        <f:param name="force" value="true"/>
                    </p:menuitem>
                    <p:menuitem value="#{msg['label.delete']}"
                                icon="fa fa-remove"
                                oncomplete="PF('confirmDeleteMailAccount').show();"
                                update="fromMailAccountList:confirmDeleteMailAccount"
                                actionListener="#{mailAccountController.onChangeSelectGroupId}"
                                rendered="${sec.hasMethod('MailAccountController', 'delete')}">
                        <f:param name="accountId" value="#{model.mailAccount.accountId}"/>
                    </p:menuitem>
                </p:menu>
            </p:column>
            <p:column headerText="#{mailBundle['label.mail.account.server.name']}">
                <h:outputText value="#{model.mailAccount.mailServer.serverName}"/>         
            </p:column>
            <p:column headerText="#{mailBundle['label.mail.account.name']}">
                <c:choose>
                    <c:when test="#{sec.hasMethod('MailAccountController', 'view')}">
                        <p:commandLink value="#{model.mailAccount.accountName}"
                               actionListener="#{mailAccountController.show}"
                               update="mainContent" styleClass="link"
                               onstart="start()" onsuccess="finish()">
                            <f:param name="rowNum" value="#{model.rowNum}"/>
                            <f:param name="showType" value="view"/>
                            <f:param name="accountId" value="#{model.mailAccount.accountId}"/>
                            <f:param name="force" value="true"/>
                        </p:commandLink>
                    </c:when>
                    <c:otherwise><h:outputText value="#{model.mailAccount.accountName}"/></c:otherwise>
                </c:choose>
            </p:column>
            <p:column headerText="#{mailBundle['label.mail.account.receive.flag']}" style="text-align: center;">
                <p:selectBooleanCheckbox value="#{model.accountReceiveFlag}"
                                         disabled="true"/>         
            </p:column>
            <p:column headerText="#{mailBundle['label.mail.account.send.flag']}" style="text-align: center;">                
                <p:selectBooleanCheckbox value="#{model.accountSendFlag}"
                                         disabled="true"/>
            </p:column>
            <p:column headerText="#{mailBundle['label.mail.account.support']}" style="text-align: center;">
                <p:selectBooleanCheckbox value="#{model.accountSupport}"
                                         disabled="true"/>                
            </p:column>
                <p:column headerText="#{mailBundle['label.mail.account.request']}" style="text-align: center;">    
                <p:selectBooleanCheckbox value="#{model.accountRequest}"
                                         disabled="true"/>
            </p:column>
            <p:column headerText="#{msg['label.state']}" styleClass="text-center status-column">                
                <crm:state state="#{model.mailAccount.accountIsDeleted}" />
            </p:column>
            <p:column headerText="#{msg['label.memo']}">     
                <h:outputText value="#{model.mailAccount.accountMemo}"/>
            </p:column>
        </p:dataTable>
    </h:form>
    <h:outputScript library="js" name="search-filter.js"/>
    <script type="text/javascript">
        var searchFilterOpts = {
            fields: [
                {
                    "type": "select",
                    "label": "#{msg['label.state']}",
                    "name": 'ma.accountIsDeleted',
                    'operator': ['EQ'],
                    "data": [
                        {
                            'label': "#{msg['label.state.using']}",
                            'value': '0'
                        },
                        {
                            'label': '#{msg['label.state.deleted']}',
                            'value': '1'
                        }
                    ]
                }
            ],
            callback: {
                onValue: function(field, value){
                    if(value === '#{msg['label.state.using']}') return 0;
                    if(value === '#{msg['label.state.deleted']}') return 1;
                    return value;
                },
                onDisplayValue: function(field, value){
                    if(value === 0) return '#{msg['label.state.using']}';
                    if(value === 1) return '#{msg['label.state.deleted']}';
                    return value;
                }
            },
            data: $('.searchDataJson').val(),
            displayQuery: true,
            queryContainer: $("#search-filter").closest('.box.box-search').find('.box-header code'),
            langs:{
                AND: '#{msg['label.condition.and']}',
                OR: '#{msg['label.condition.or']}',
                LIKE: '#{msg['label.condition.like']}',
                LIKE_START: '#{msg['label.condition.like_start']}',
                LIKE_END: '#{msg['label.condition.like_end']}',
                NOT_LIKE: '#{msg['label.condition.not_like']}',
                BLANK: '#{msg['label.condition.blank']}',
                NOT_BLANK: '#{msg['label.condition.not_blank']}'
            }
        };
        jQuery(document).ready(function ($) {
            var sf = $("#search-filter").searchFilter(searchFilterOpts);
            $(".btn-search").click(function (event) {
                event.preventDefault();
                var data = sf.data('searchFilter').getData();
                $('.searchDataJson').val(data);
                $(".search-action").trigger('click');
            });
        });
    </script>
</ui:composition>
