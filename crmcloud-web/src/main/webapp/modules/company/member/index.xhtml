<?xml version='1.0' encoding='UTF-8' ?>
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:p="http://primefaces.org/ui"
                xmlns:f="http://xmlns.jcp.org/jsf/core"
                xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
                xmlns:h="http://xmlns.jcp.org/jsf/html"
                xmlns:c="http://xmlns.jcp.org/jsp/jstl/core"
                xmlns:crm="http://gnext.co.jp/facelets">
    <div id="pageTitle">#{companyBundle['label.member.management.title']} #{msg['symbol.paren.left']}#{msg['label.title.list']}#{msg['symbol.paren.right']}</div>
    <h:form id="fromMemberList">
        <p:confirmDialog message="#{msg['label.dialog.confirm']}" header="#{msg['label.dialog.header']}"  widgetVar="confirmDeleteMember" id="confirmDeleteMember">  
            <p:commandButton value="#{msg['label.dialog.yes']}" onclick="PF('confirmDeleteMember').hide();" update="mainContent :growl"
                             actionListener="#{memberController.delete}" title="accept" icon="ui-icon-check">
                <f:param name="memberId" value="#{memberController.selectMemberId}"/>
                <f:param name="force" value="true"/>
            </p:commandButton>
            <p:commandButton value="#{msg['label.dialog.no']}" onclick="PF('confirmDeleteMember').hide();" type="button" title="close" icon="ui-icon-close"/>   
        </p:confirmDialog>
        <p:dialog widgetVar="uploadMemberPanel" header="#{companyBundle['label.member.up']}" showEffect="fade" dynamic="true" responsive="true" hideEffect="fade" resizable="false" modal="true" width="500">
            <p:ajax event="close" update="mainContent, :growl" listener="#{memberController.cancelUpload()}" />
            #{companyBundle['label.member.upload']}<p:outputLabel value="#{memberController.uploadedFile.getFileName()}" id="file-name"/>
            <p:fileUpload fileUploadListener="#{memberController.fileUploadListener}" mode="advanced" auto="true" skinSimple="true" 
                          label="#{companyBundle['label.member.export']}" update="file-name"
                                     multiple="false" sizeLimit="3072000" allowTypes="/(\.|\/)(xls)$/" value="#{memberController.uploadedFile}"/>
            <f:facet name="footer">
                <p:outputPanel styleClass="text-right" style="overflow: hidden">
                    <p:commandButton value="#{companyBundle['label.member.upload.accept']}" actionListener="#{memberController.importMemberData()}" 
                                     update="mainContent, :growl" onclick="PF('uploadPanel').hide();" 
                                     styleClass="ui-confirmdialog-yes" icon="ui-icon-check" 
                                     onstart="start()" onsuccess="finish()"/>
                    <p:commandButton value="#{companyBundle['label.member.upload.cancel']}" actionListener="#{memberController.cancelUpload()}" 
                                     update="mainContent, :growl"
                                     styleClass="ui-confirmdialog-no" icon="ui-icon-close" 
                                     onstart="start()" onsuccess="finish()"/>
                </p:outputPanel>
            </f:facet>
        </p:dialog>
        <h:panelGrid width="100%" styleClass="page-header">
            <f:facet name="header">
                <div class="row">
                    <div class="col-md-6">
                        <h1>
                            #{companyBundle['label.member.management.title']}
                            <small>#{msg['label.title.list']}</small>
                        </h1>
                    </div>
                    <div class="col-md-6 text-right">
                        <p:commandButton value="#{msg['label.create']}"
                                         icon="fa fa-plus-circle" title="#{msg['label.create']}"
                                         actionListener="#{memberController.show}"
                                         update="mainContent"
                                         rendered="${sec.hasMethod('MemberController', 'create')}"
                                         onstart="start()" oncomplete="finish()">
                            <f:param name="showType" value="create"/>
                            <f:param name="force" value="true"/>
                        </p:commandButton>
                        <p:commandButton value="#{msg['label.download']}" title="#{msg['label.download']}" icon="fa fa-cloud-download"
                                         action="#{memberController.exportMemberData(companyBundle['label.member.management.title'])}" ajax="false"
                                         rendered="${sec.hasMethod('MemberController', 'download')}">
                        </p:commandButton>
                        <p:commandButton value="#{msg['label.upload']}" 
                                         title="#{msg['label.upload']}" icon="fa fa-cloud-upload"
                                         onclick="PF('uploadMemberPanel').show();" 
                                         rendered="${sec.hasMethod('MemberController', 'upload')}">
                        </p:commandButton>
                    </div>
                </div>
            </f:facet>
        </h:panelGrid>
        <p:outputPanel>
            <div class="box box-solid box-search">
                <div class="box-header with-border" data-widget="collapse">
                    <h3 class="box-title">#{msg['label.search.title']}</h3>
                    #{msg['symbol.colon']}<code></code>
                    <div class="box-tools pull-right">
                        <button type="button" class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-plus"></i></button>
                    </div>
                </div>
                <div class="box-body">
                    <div id="search-filter"></div>
                </div>
                <div class="box-footer text-center">
                    <h:inputText value="#{memberController.searchDataJson}" styleClass="searchDataJson" style="display: none"/>

                    <p:commandLink actionListener="#{memberController.search}" 
                                   style="display:none" styleClass="search-action" 
                                   onstart="start()" onsuccess="finish()" 
                                   update="mainContent, :growl"/>

                    <p:commandButton value="#{msg['label.search']}" type="button" icon="fa fa-search" styleClass="btn-search"></p:commandButton>
                </div>
            </div>
        </p:outputPanel>
        <c:set var="rowsPerPageTemplate" value="#{configController.getConfig('DATATABLE_ROW_PER_PAGE')}" scope="session" />
        <c:set var="rows" value="#{configController.getConfig('DATATABLE_DEFAULT_PER_PAGE')}" scope="session" />
        <p:dataTable id="tblMembers" rowIndexVar="rowIndex"
                     var="model" value="#{memberController.memberModels}"
                     styleClass="crmcloud_datatable" scrollable="true"
                     lazy="true" paginator="true" paginatorTemplate="#{layout.paginatorTemplate}" currentPageReportTemplate="#{layout.currentPageReportTemplate}"
                     rowsPerPageTemplate="#{rowsPerPageTemplate}" rows="#{rows}" pageLinks="5" rowHover="true" emptyMessage="#{msg['label.data.empty']}">
            <p:column styleClass="table-action status-column" exportable="false">
                <p:commandButton id="dynaButton" icon="fa fa-cog" styleClass="btn-option" style="height: 23px;"/>
                <p:menu overlay="true" trigger="dynaButton" my="left top" at="left bottom">
                        <p:menuitem value="#{msg['label.detail']}" icon="fa fa-search" actionListener="#{memberController.show}" update="mainContent" onstart="start()" onsuccess="finish()"
                                    rendered="#{sec.hasMethod('MemberController','view')}">
                            <f:param name="rowNum" value="#{model.rowNum}"/>
                            <f:param name="showType" value="view"/>
                            <f:param name="memberId" value="#{model.member.memberId}"/>
                            <f:param name="force" value="true"/>
                        </p:menuitem>
                        <p:menuitem value="#{msg['label.edit']}" icon="fa fa-edit" 
                                    actionListener="#{memberController.show}" 
                                    update="mainContent" onstart="start()" 
                                    onsuccess="finish()" rendered="${sec.hasMethod('MemberController', 'update')}">
                            <f:param name="showType" value="edit"/>
                            <f:param name="memberId" value="#{model.member.memberId}"/>
                            <f:param name="force" value="true"/>
                        </p:menuitem>
                        <p:menuitem value="#{msg['label.delete']}" icon="fa fa-remove" 
                                    oncomplete="PF('confirmDeleteMember').show();" 
                                    update="fromMemberList:confirmDeleteMember" 
                                    actionListener="#{memberController.onSelectMemberIdOnListForPrepareDelete}"
                                    rendered="${sec.hasMethod('MemberController', 'delete') and !sec.isLoggedInOtherCompany(model.member.memberId)}">
                            <f:param name="memberId" value="#{model.member.memberId}"/>
                        </p:menuitem>
                </p:menu>
            </p:column>
            
            <p:column headerText="#{msg['label.group.name']}">
                <h:outputText value="#{memberController.viewGroupNameOfMember(model.member.memberId)} " />
            </p:column>

            <p:column headerText="#{msg['label.loginId']}">                
                <h:outputText value="#{model.member.memberLoginId} " />
            </p:column>
            <p:column headerText="#{msg['label.group.name']}">
                <h:outputText value="#{model.member.group.groupName} " />
            </p:column>
            <p:column headerText="#{companyBundle['label.member.name']}">
                <h:outputText value="#{model.member.memberNameFirst} #{model.member.memberNameLast}" rendered="#{!sec.hasMethod('MemberController', 'view')}"/>
                <p:commandLink value="#{model.member.memberNameFirst} #{model.member.memberNameLast}" actionListener="#{memberController.show}"
                               update="mainContent" styleClass="link"
                               onstart="start()" onsuccess="finish()"
                               rendered="#{sec.hasMethod('MemberController','view')}">
                    <f:param name="rowNum" value="#{model.rowNum}"/>
                    <f:param name="showType" value="view"/>
                    <f:param name="memberId" value="#{model.member.memberId}"/>
                    <f:param name="force" value="true"/>
                </p:commandLink>                
            </p:column>
            <p:column headerText="#{companyBundle['label.member.name.kana']}">                
                <h:outputText value="#{model.member.memberKanaFirst} #{model.member.memberKanaLast}" />
            </p:column>
            <p:column headerText="#{msg['label.menu.AuthorityController']}">
                <h:outputText value="N/A" rendered="#{sec.isLoggedInOtherCompany(model.member.memberId)}"/>
                <h:outputText value="#{model.viewRoleName}" rendered="#{!sec.isLoggedInOtherCompany(model.member.memberId)}"/>
            </p:column>
            <p:column headerText="#{msg['label.state']}" style="width:180px" styleClass="text-center status-column">
                <crm:state state="#{model.member.memberDeleted}"/>
            </p:column>
            <p:column headerText="#{msg['label.memo']}">
                <p:inputTextarea
                    rows="2"
                    autoResize="false"
                    readonly="true"
                    value="#{model.member.memberMemo}"
                    style="width: 100%"
                    styleClass="font_weight_normal inputTextareaNotBorder" />
            </p:column>
            <p:column headerText="#{msg['label.creator']}">                
                <h:outputText value="#{model.member.creator.memberNameFirst}" />
            </p:column>
            <p:column headerText="#{msg['label.create.time']}" styleClass="date-column">                
                <h:outputText value="#{model.displayCreateTime}" />
            </p:column>
            <p:column headerText="#{msg['label.updater']}">                
                <h:outputText value="#{model.member.updator.memberNameFirst}" />
            </p:column>
            <p:column headerText="#{msg['label.update.time']}" styleClass="date-column">                
                <h:outputText value="#{model.displayUpdateTime}" />
            </p:column>
            <p:column headerText="#{msg['label.menu.AuthorityController']}">                
                <h:outputText value="#{model.viewRoleName}" />
            </p:column>
            <p:column headerText="#{msg['label.state']}" styleClass="text-center status-column">
                <crm:state state="#{model.member.memberDeleted}"/>
            </p:column>
        </p:dataTable>
    </h:form>
    <h:outputScript library="js" name="search-filter.js"/>
    <script type="text/javascript">
        var searchFilterOpts = {
            fields: [
                {
                    "type": "string",
                    "label": "#{msg['label.loginId']}",
                    "name": 'm.memberLoginId',
                    'operator': ['EQ', 'LIKE', 'BLANK']
                },
                {
                    "type": "select",
                    "label": "#{msg['label.group.name']}",
                    "name": 'm.group.groupId',
                    'operator': ['EQ'],
                    "data": ${groupController.groupList}
                },
                {
                    "type": "select",
                    "label": "#{msg['label.state']}",
                    "name": 'm.memberDeleted',
                    'operator': ['EQ'],
                    "data": [
                        {
                            'label': "#{msg['label.state.using']}",
                            'value': '0'
                        },
                        {
                            'label': "#{msg['label.state.deleted']}",
                            'value': '1'
                        }
                    ]
                }
            ],
            data: $('.searchDataJson').val(),
            displayQuery: true,
            queryContainer: $("#search-filter").closest('.box.box-search').find('.box-header code'),
            langs:{
                AND: '#{msg['label.condition.and']}',
                OR: '#{msg['label.condition.or']}',
                LIKE: '#{msg['label.condition.like']}',
                LIKE_START: '#{msg['label.condition.like_start']}',
                LIKE_END: '#{msg['label.condition.like_end']}',
                NOT_LIKE: '#{msg['label.condition.not_like']}',
                BLANK: '#{msg['label.condition.blank']}',
                NOT_BLANK: '#{msg['label.condition.not_blank']}'
            }
        };
        jQuery(document).ready(function ($) {
            var sf = $("#search-filter").searchFilter(searchFilterOpts);
            $(".btn-search").click(function (event) {
                event.preventDefault();
                var data = sf.data('searchFilter').getData();
                $('.searchDataJson').val(data);
                $(".search-action").trigger('click');
            });
        });
    </script>
</ui:composition>
