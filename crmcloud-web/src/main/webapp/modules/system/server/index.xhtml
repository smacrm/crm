<?xml version='1.0' encoding='UTF-8' ?>
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:p="http://primefaces.org/ui"
                xmlns:f="http://xmlns.jcp.org/jsf/core"
                xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
                xmlns:h="http://xmlns.jcp.org/jsf/html"
                xmlns:c="http://xmlns.jcp.org/jsp/jstl/core"
                xmlns:crm="http://gnext.co.jp/facelets">
    <div id="pageTitle">#{systemBundle['label.system.server.title']} #{msg['symbol.paren.left']}#{systemBundle['label.system.server.title.list']}#{msg['symbol.paren.right']}</div>
    <h:form id="frmServerList">
        <p:confirmDialog message="#{msg['label.confirm.delete']}?" header="#{msg['label.confirm']}"
                         widgetVar="confirmDeleteServer" id="confirmDeleteServer">
            <p:commandButton value="#{msg['label.dialog.yes']}" onclick="PF('confirmDeleteServer').hide();"
                             update="mainContent :growl"
                             actionListener="#{serverController.delete}"
                             icon="ui-icon-check">
                <f:param name="force" value="true"/>
                <f:param name="serverId" value="#{serverController.selectServerId}"/>
            </p:commandButton>
            <p:commandButton value="#{msg['label.dialog.no']}"
                             onclick="PF('confirmDeleteServer').hide();"
                             type="button" icon="ui-icon-close"/>

        </p:confirmDialog>
        <h:panelGrid width="100%" styleClass="page-header">
            <f:facet name="header">
                <div class="row">
                    <div class="col-md-6">
                        <h1>
                            #{systemBundle['label.system.server.title']}
                            <small>#{systemBundle['label.system.server.title.list']}</small>
                        </h1>
                    </div>
                    <div class="col-md-6 text-right">
                        <p:commandButton value="#{msg['label.create']}"
                                         icon="fa fa-plus-circle"
                                         title="#{msg['label.create']}"
                                         update="mainContent"
                                         actionListener="#{serverController.show}"
                                         rendered="${sec.hasMethod('ServerController', 'create')}"
                                         onstart="start()" onsuccess="finish()">
                            <f:param name="showType" value="create"/>
                            <f:param name="force" value="true"/>
                        </p:commandButton>
                        <p:commandButton value="#{msg['label.download']}"
                                         title="#{msg['label.download']}"
                                         icon="fa fa-cloud-download"
                                         action="#{serverController.download('tblServer', 'Server')}"
                                         ajax="false"
                                         rendered="${sec.hasMethod('ServerController', 'download')}"
                                         onstart="start()" onsuccess="finish()">
                        </p:commandButton>
                    </div>
                </div>
            </f:facet>
        </h:panelGrid>
        
        <p:outputPanel rendered="${sec.hasMethod('ServerController', 'search')}">
            <div class="box box-solid box-search">
                <div class="box-header with-border" data-widget="collapse">
                    <h3 class="box-title">#{msg['label.search.title']}</h3>
                    #{msg['symbol.colon']}<code></code>
                    <div class="box-tools pull-right">
                        <button type="button" class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-plus"></i></button>
                    </div>
                </div>
                <div class="box-body">
                    <div id="search-filter"></div>
                </div>
                <div class="box-footer text-center">
                    <h:inputText value="#{serverController.searchDataJson}" styleClass="searchDataJson" style="display: none"/>
                    <p:commandLink actionListener="#{serverController.search}" style="display:none" styleClass="search-action" onstart="start()" onsuccess="finish()" update="mainContent, :growl"/>
                    <p:commandButton value="#{msg['label.search']}" type="button" icon="fa fa-search" styleClass="btn-search"></p:commandButton>
                </div>
            </div>
        </p:outputPanel>
        
        <c:set var="rowsPerPageTemplate" value="#{configController.getConfig('DATATABLE_ROW_PER_PAGE')}" scope="session" />
        <c:set var="rows" value="#{configController.getConfig('DATATABLE_DEFAULT_PER_PAGE')}" scope="session" />
        <p:dataTable id="tblServer" rowIndexVar="rowIndex"
                     var="model" value="#{serverController.models}"
                     styleClass="crmcloud_datatable"
                     scrollable="true"
                     lazy="true" paginator="true" paginatorTemplate="#{layout.paginatorTemplate}" currentPageReportTemplate="#{layout.currentPageReportTemplate}"
                     rowsPerPageTemplate="#{rowsPerPageTemplate}" rows="#{rows}" pageLinks="5" rowHover="true" emptyMessage="#{msg['label.data.empty']}">
                     
            <p:column styleClass="table-action status-column" exportable="false">
                 <p:commandButton id="dynaButton" icon="fa fa-cog" styleClass="btn-option"/>
                 <p:menu overlay="true" trigger="dynaButton" my="left top" at="left bottom">
                    <p:menuitem value="#{msg['label.detail']}" icon="fa fa-search"
                                 actionListener="#{serverController.show}"
                                 rendered="${sec.hasMethod('ServerController','view')}"
                                 update="mainContent" onstart="start()" onsuccess="finish()">
                         <f:param name="rowNum" value="#{model.rowNum}"/>
                         <f:param name="showType" value="view"/>
                         <f:param name="serverId" value="#{model.server.serverId}"/>
                         <f:param name="force" value="true"/>
                     </p:menuitem>
                     <p:menuitem value="#{msg['label.edit']}" icon="fa fa-edit"
                                 update="mainContent" onstart="start()" onsuccess="finish()"
                                 rendered="#{sec.hasMethod('ServerController', 'update')}"
                                 actionListener="#{serverController.show}">
                         <f:param name="showType" value="edit"/>
                         <f:param name="serverId" value="#{model.server.serverId}"/>
                         <f:param name="force" value="true"/>
                     </p:menuitem>
                     <p:menuitem value="#{msg['label.delete']}"
                                 icon="fa fa-remove"
                                 oncomplete="PF('confirmDeleteServer').show();"
                                 update="frmServerList:confirmDeleteServer"
                                 actionListener="#{serverController.onChangeSelectServerId}"
                                 rendered="${sec.hasMethod('ServerController', 'delete')}">
                         <f:param name="serverId" value="#{model.server.serverId}"/>
                     </p:menuitem>
                 </p:menu>
            </p:column>
            
            <p:column headerText="#{systemBundle['label.system.server.name']}">                
                <p:commandLink value="#{model.server.serverName}"
                               actionListener="#{serverController.show}"
                               update="mainContent" styleClass="link"
                               onstart="start()" onsuccess="finish()">
                    <f:param name="rowNum" value="#{model.rowNum}"/>
                    <f:param name="showType" value="view"/>
                    <f:param name="serverId" value="#{model.server.serverId}"/>
                    <f:param name="force" value="true"/>
                </p:commandLink> 
            </p:column>
            
            <p:column headerText="#{systemBundle['label.system.server.type']}">
                <h:outputText value="#{model.server.serverType}"/>         
            </p:column>
            
            <p:column headerText="#{systemBundle['label.system.server.folder']}">
                 <h:outputText value="#{model.server.serverFolder}"/>         
            </p:column>
            
            <p:column headerText="#{systemBundle['label.system.server.host']}">
                <h:outputText value="#{model.server.serverHost}"/>         
            </p:column>
            
            <p:column headerText="#{systemBundle['label.system.server.port']}">
                <h:outputText value="#{model.server.serverPort}"/>         
            </p:column>
            
            <p:column headerText="#{systemBundle['label.system.server.username']}">
                <h:outputText value="#{model.server.serverUsername}"/>         
            </p:column>
            
            <p:column headerText="#{systemBundle['label.system.server.ssl']}" style="text-align: center;">
                <p:selectBooleanCheckbox value="#{model.serverSsl}"
                                         disabled="true"/>   
            </p:column>
            
            <p:column headerText="#{systemBundle['label.system.server.protocol']}">
                <h:outputText value="#{model.server.serverProtocol}"/>         
            </p:column>
            
            <p:column headerText="#{msg['label.state']}" styleClass="text-center status-column">                
                <crm:state state="#{model.server.serverDeleted}"/>
            </p:column>
            
        </p:dataTable>
    </h:form>
     <h:outputScript library="js" name="search-filter.js"/>
    <script type="text/javascript">
        var searchFilterOpts = {
            fields: [
                {
                    "type": "string",
                    "label": "#{systemBundle['label.system.server.name']}",
                    "name": 'sv.serverName',
                    'operator': ['EQ', 'LIKE', 'BLANK']
                },
                {
                    "type": "select",
                    "label": "#{msg['label.state']}",
                    "name": 'sv.serverDeleted',
                    'operator': ['EQ'],
                    "data": [
                        {
                            'label': '#{msg['label.state.using']}',
                            'value': '0'
                        },
                        {
                            'label': '#{msg['label.state.deleted']}',
                            'value': '1'
                        }
                    ]
                }
            ],
            callback: {
                onValue: function(field, value){
                    if(value === '#{msg['label.state.using']}') return 0;
                    if(value === '#{msg['label.state.deleted']}') return 1;
                    return value;
                },
                onDisplayValue: function(field, value){
                    if(value === 0) return '#{msg['label.state.using']}';
                    if(value === 1) return '#{msg['label.state.deleted']}';
                    return value;
                }
            },
            data: $('.searchDataJson').val(),
            displayQuery: true,
            queryContainer: $("#search-filter").closest('.box.box-search').find('.box-header code'),
            langs:{
                AND: '#{msg['label.condition.and']}',
                OR: '#{msg['label.condition.or']}',
                LIKE: '#{msg['label.condition.like']}',
                LIKE_START: '#{msg['label.condition.like_start']}',
                LIKE_END: '#{msg['label.condition.like_end']}',
                NOT_LIKE: '#{msg['label.condition.not_like']}',
                BLANK: '#{msg['label.condition.blank']}',
                NOT_BLANK: '#{msg['label.condition.not_blank']}'
            }
        };
        jQuery(document).ready(function ($) {
            var sf = $("#search-filter").searchFilter(searchFilterOpts);
            $(".btn-search").click(function (event) {
                event.preventDefault();
                var data = sf.data('searchFilter').getData();
                $('.searchDataJson').val(data);
                $(".search-action").trigger('click');
            });
        });
    </script>
</ui:composition>
